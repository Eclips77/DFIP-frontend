name: Deploy DFIP to Heroku

on:
  push:
    branches: [main]
  workflow_dispatch:

env:
  PYTHON_VERSION: "3.11"
  NODE_VERSION: "18"

jobs:
  deploy-api:
    name: Deploy FastAPI Backend
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Cache Python dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('api/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        working-directory: api
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Install Heroku CLI
        run: |
          curl https://cli-assets.heroku.com/install-ubuntu.sh | sh
          export PATH="/usr/local/lib/heroku/bin:$PATH"
          echo "/usr/local/lib/heroku/bin" >> $GITHUB_PATH

      - name: Verify Heroku CLI installation
        run: |
          export PATH="/usr/local/lib/heroku/bin:$PATH"
          heroku --version
          heroku auth:whoami || echo "Not logged in yet"

      - name: Run tests (if available)
        working-directory: api
        run: |
          if [ -f "tests/test_*.py" ]; then
            python -m pytest tests/ -v
          else
            echo "No tests found, skipping..."
          fi
        continue-on-error: true

      - name: Deploy API to Heroku
        uses: akhileshns/heroku-deploy@v3.13.15
        with:
          heroku_api_key: ${{ secrets.HEROKU_API_KEY }}
          heroku_app_name: ${{ secrets.HEROKU_API_APP_NAME }}
          heroku_email: ${{ secrets.HEROKU_EMAIL }}
          buildpack: "heroku/python"
          usedocker: false
          dontuseforce: false

  deploy-frontend:
    name: Deploy Next.js Frontend
    runs-on: ubuntu-latest
    needs: deploy-api
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: web/package-lock.json

      - name: Install dependencies
        working-directory: web
        run: npm ci

      - name: Run linting
        working-directory: web
        run: npm run lint || echo "Linting completed with warnings"
        continue-on-error: true

      - name: Build application
        working-directory: web
        run: npm run build
        env:
          NODE_ENV: production
          NEXT_PUBLIC_API_URL: https://${{ secrets.HEROKU_API_APP_NAME }}.herokuapp.com

      - name: Install Heroku CLI
        run: |
          curl https://cli-assets.heroku.com/install-ubuntu.sh | sh
          export PATH="/usr/local/lib/heroku/bin:$PATH"
          echo "/usr/local/lib/heroku/bin" >> $GITHUB_PATH

      - name: Verify Heroku CLI installation
        run: |
          export PATH="/usr/local/lib/heroku/bin:$PATH"
          heroku --version
          heroku auth:whoami || echo "Not logged in yet"

      - name: Deploy Frontend to Heroku
        uses: akhileshns/heroku-deploy@v3.13.15
        with:
          heroku_api_key: ${{ secrets.HEROKU_API_KEY }}
          heroku_app_name: ${{ secrets.HEROKU_FRONTEND_APP_NAME }}
          heroku_email: ${{ secrets.HEROKU_EMAIL }}
          appdir: "web"
          buildpack: "heroku/nodejs"
          usedocker: false
          dontuseforce: false

  post-deploy:
    name: Post-deployment checks
    runs-on: ubuntu-latest
    needs: [deploy-api, deploy-frontend]
    
    steps:
      - name: Check API health
        run: |
          echo "Checking API health..."
          curl -f https://${{ secrets.HEROKU_API_APP_NAME }}.herokuapp.com/health || echo "API health check failed"
        continue-on-error: true

      - name: Check Frontend availability
        run: |
          echo "Checking Frontend availability..."
          curl -f https://${{ secrets.HEROKU_FRONTEND_APP_NAME }}.herokuapp.com || echo "Frontend check failed"
        continue-on-error: true

      - name: Deployment notification
        run: |
          echo "ðŸš€ Deployment completed!"
          echo "API: https://${{ secrets.HEROKU_API_APP_NAME }}.herokuapp.com"
          echo "Frontend: https://${{ secrets.HEROKU_FRONTEND_APP_NAME }}.herokuapp.com"
